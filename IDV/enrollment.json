{
  "openapi": "3.1.0",
  "info": {
    "title": "enrollments",
    "version": "1.0",
    "summary": "Online enrollment of users"
  },
  "servers": [
    {
      "url": "http://enrollment.govstack.global:3000"
    }
  ],
  "paths": {
    "/registration/{applicationid}/{id}/info": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "applicationid",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path"
        }
      ],
      "post": {
        "summary": "",
        "operationId": "post-registration-applicationId",
        "responses": {
          "200": {
            "description": "OK"
          },
          "402": {
            "description": "Payment Required"
          },
          "403": {
            "description": "Forbidden"
          },
          "": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "error": {
                      "$ref": "#/components/schemas/Error"
                    }
                  },
                  "required": [
                    "status"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string"
                  },
                  "meta": {
                    "$ref": "#/components/schemas/MetaData"
                  }
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          },
          "description": ""
        }
      },
      "get": {
        "summary": "enrollment info api",
        "operationId": "get-registration",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "consent": {
                        "$ref": "#/components/schemas/Consent"
                      },
                      "context": {
                        "$ref": "#/components/schemas/EnrollmentContext"
                      },
                      "createdDate": {
                        "type": "string"
                      },
                      "meta": {
                        "type": "object"
                      },
                      "status": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "consent",
                      "context",
                      "createdDate",
                      "meta",
                      "status"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/registration/{applicationId}/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "applicationId",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "patch": {
        "summary": "",
        "operationId": "post-registration-rid-source-process",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "enrollmentId": "string",
                      "status": "FINALIZED",
                      "enrollmentType": "string",
                      "enrollmentFlags": [
                        {
                          "timeout": 3600,
                          "other": "other"
                        }
                      ],
                      "requestData": [
                        {
                          "requestType": "IDCARD_ISSUANCE",
                          "deliveryPlace": "paris",
                          "other": "other"
                        }
                      ],
                      "contextualData": {
                        "enrollmentDate": "2019-01-11"
                      },
                      "biographicData": {
                        "dateOfBirth": "1985-11-30",
                        "gender": "M",
                        "nationality": "FRA"
                      },
                      "biometricData": [
                        {
                          "biometricType": "FACE",
                          "biometricSubType": "UNKNOWN",
                          "instance": "string",
                          "image": "KRstMx2Nyc",
                          "imageRef": "https://image.govstack.global/KRstMx2Nyc",
                          "captureDate": "2021-07-02",
                          "captureDevice": "string",
                          "impressionType": "LIVE_SCAN_PLAIN",
                          "width": 1,
                          "height": 1,
                          "bitdepth": 1,
                          "mimetype": "string",
                          "resolution": 1,
                          "compression": "NONE",
                          "missing": [
                            {
                              "biometricSubType": "UNKNOWN",
                              "presence": "BANDAGED"
                            }
                          ],
                          "metadata": "string",
                          "comment": "string"
                        }
                      ],
                      "documentData": [
                        {
                          "documentType": "ID_CARD",
                          "documentTypeOther": "string",
                          "instance": "string",
                          "parts": [
                            {
                              "pages": [
                                1
                              ],
                              "data": "KRstMx2Nyc",
                              "dataRef": "https://image.govstack.global/KRstMx2Nyc",
                              "width": 1,
                              "height": 1,
                              "captureDate": "2021-07-02",
                              "captureDevice": "string",
                              "mimetype": "string"
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "properties": {
                    "response": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "enum": [
                            "success",
                            "failed"
                          ]
                        },
                        "date": {
                          "type": "string"
                        },
                        "error": {
                          "$ref": "#/components/schemas/Error"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden as its already published"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "x-examples": {
                  "example-1": {
                    "enrollmentId": "string",
                    "status": "FINALIZED",
                    "enrollmentType": "string",
                    "enrollmentFlags": [
                      {
                        "timeout": 3600,
                        "other": "other"
                      }
                    ],
                    "requestData": [
                      {
                        "requestType": "IDCARD_ISSUANCE",
                        "deliveryPlace": "paris",
                        "other": "other"
                      }
                    ],
                    "contextualData": {
                      "enrollmentDate": "2019-01-11"
                    },
                    "biographicData": {
                      "dateOfBirth": "1985-11-30",
                      "gender": "M",
                      "nationality": "FRA"
                    },
                    "biometricData": [
                      {
                        "biometricType": "FACE",
                        "biometricSubType": "UNKNOWN",
                        "instance": "string",
                        "image": "KRstMx2Nyc",
                        "imageRef": "https://image.govstack.global/KRstMx2Nyc",
                        "captureDate": "2021-07-02",
                        "captureDevice": "string",
                        "impressionType": "LIVE_SCAN_PLAIN",
                        "width": 1,
                        "height": 1,
                        "bitdepth": 1,
                        "mimetype": "string",
                        "resolution": 1,
                        "compression": "NONE",
                        "missing": [
                          {
                            "biometricSubType": "UNKNOWN",
                            "presence": "BANDAGED"
                          }
                        ],
                        "metadata": "string",
                        "comment": "string"
                      }
                    ],
                    "documentData": [
                      {
                        "documentType": "ID_CARD",
                        "documentTypeOther": "string",
                        "instance": "string",
                        "parts": [
                          {
                            "pages": [
                              1
                            ],
                            "data": "KRstMx2Nyc",
                            "dataRef": "https://image.govstack.global/KRstMx2Nyc",
                            "width": 1,
                            "height": 1,
                            "captureDate": "2021-07-02",
                            "captureDevice": "string",
                            "mimetype": "string"
                          }
                        ]
                      }
                    ]
                  }
                },
                "properties": {
                  "demographic": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/DemoAttribute"
                    }
                  },
                  "biometricData": {
                    "type": "array",
                    "uniqueItems": true,
                    "minItems": 1,
                    "items": {
                      "$ref": "#/components/schemas/BiometricData"
                    }
                  },
                  "documentData": {
                    "type": "array",
                    "uniqueItems": true,
                    "minItems": 1,
                    "items": {
                      "$ref": "#/components/schemas/Document"
                    }
                  },
                  "meta": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/MetaData"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "enrollment api's",
        "operationId": "get-registration-applicationId-id",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": [
                        "string",
                        "object"
                      ],
                      "required": [
                        "status",
                        "enrollmentContext"
                      ],
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "Status of the application/id",
                          "enum": [
                            "Completed",
                            "Draft",
                            "Finalized"
                          ]
                        },
                        "enrollmentContext": {
                          "$ref": "#/components/schemas/EnrollmentContext"
                        },
                        "error": {
                          "$ref": "#/components/schemas/Error"
                        }
                      }
                    }
                  },
                  "required": [
                    "response"
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "",
        "operationId": "post-registration-applicationId-id",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "Conflict"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "context": {
                    "$ref": "#/components/schemas/EnrollmentContext"
                  },
                  "consent": {
                    "$ref": "#/components/schemas/Consent"
                  }
                }
              }
            }
          },
          "description": "Creates a draft data for the given transaction id (id)"
        }
      }
    },
    "/registration/{applicationid}/{id}/publish": {
      "post": {
        "summary": "publish and finalize the enrollment",
        "operationId": "post-registration-rid",
        "responses": {
          "200": {
            "description": "OK"
          },
          "402": {
            "description": "Payment Required"
          }
        },
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MetaData"
              }
            }
          }
        }
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "applicationid",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/registration/{applicationId}/{id}/demographic": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "applicationId",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path"
        }
      ],
      "get": {
        "summary": "get demographic info",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "demographic": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DemoAttribute"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-registration-applicationId"
      }
    },
    "/registration/{applicationId}/{id}/biometric": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "applicationId",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path"
        }
      ],
      "get": {
        "summary": "get biometric data",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "biometric": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BiometricData"
                      }
                    }
                  }
                }
              }
            }
          },
          "": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BiometricData"
                }
              }
            }
          }
        },
        "operationId": "get-registration-applicationId"
      }
    },
    "/registration/{applicationId}/{id}/document": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "applicationId",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path"
        }
      ],
      "get": {
        "summary": "get enrollment documents",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "document": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Document"
                      }
                    }
                  }
                }
              }
            }
          },
          "": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BiometricData"
                }
              }
            }
          }
        },
        "operationId": "get-registration-applicationId"
      }
    },
    "/registration/{applicationId}/process": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "applicationId",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "",
        "operationId": "post-registration-applicationId-process",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "processing",
                        "completed",
                        "issued"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "description": ""
      },
      "get": {
        "summary": "",
        "operationId": "get-registration-applicationId-process",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "date": {
                      "type": "string",
                      "description": "finalized date. Date on which last post process api was called."
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "Finalized",
                        "Correction",
                        "Rejected",
                        "Approved",
                        "Inprogress"
                      ],
                      "description": "Status of the packet"
                    },
                    "subStatus": {
                      "type": "string",
                      "description": "Further workflow related status",
                      "minLength": 3,
                      "maxLength": 256
                    }
                  },
                  "required": [
                    "date",
                    "status",
                    "subStatus"
                  ]
                }
              }
            }
          }
        },
        "description": "Get the process state"
      }
    }
  },
  "components": {
    "schemas": {
      "Biometrics": {
        "description": "",
        "type": "object",
        "properties": {
          "env": {
            "type": "string",
            "minLength": 1
          },
          "purpose": {
            "type": "string",
            "minLength": 1
          },
          "specVersion": {
            "type": "string",
            "minLength": 1
          },
          "timeout": {
            "type": "string",
            "minLength": 1
          },
          "captureTime": {
            "type": "string",
            "minLength": 1
          },
          "transactionId": {
            "type": "string",
            "minLength": 1
          },
          "bio": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
              "required": [
                "type",
                "count",
                "requestedScore",
                "serialNo",
                "deviceSubId",
                "previousHash"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "minLength": 1
                },
                "count": {
                  "type": "string",
                  "minLength": 1
                },
                "bioSubType": {
                  "type": "array",
                  "items": {
                    "required": [],
                    "properties": {}
                  }
                },
                "exception": {
                  "type": "array",
                  "items": {
                    "required": [],
                    "properties": {}
                  }
                },
                "requestedScore": {
                  "type": "string",
                  "minLength": 1
                },
                "serialNo": {
                  "type": "string",
                  "minLength": 1
                },
                "deviceSubId": {
                  "type": "string",
                  "minLength": 1
                },
                "previousHash": {
                  "type": "string",
                  "minLength": 1
                }
              }
            }
          }
        },
        "required": [
          "env",
          "purpose",
          "specVersion",
          "timeout",
          "captureTime",
          "transactionId",
          "bio"
        ],
        "x-examples": {
          "example-1": {
            "env": "Target environment",
            "purpose": "Registration",
            "specVersion": "Expected SBI spec version",
            "timeout": "Timeout for registration capture",
            "captureTime": "Time of capture request in ISO format",
            "transactionId": "Transaction Id for the current capture",
            "bio": [
              {
                "type": "Type of the biometric data",
                "count": "Finger/Iris count, in case of face max is set to 1",
                "bioSubType": [
                  "Array of subtypes"
                ],
                "exception": [
                  "Finger or Iris to be excluded"
                ],
                "requestedScore": "Expected quality score that should match to complete a successful capture.",
                "serialNo": "Printed Serial Number of the device",
                "deviceSubId": "Specific device Id",
                "previousHash": "Hash of the previous block"
              }
            ]
          }
        }
      },
      "BiometricData": {
        "title": "BiometricFactor",
        "type": "object",
        "x-examples": null,
        "example-1": {
          "env": "Target environment",
          "purpose": "Registration",
          "specVersion": "Expected SBI spec version",
          "timeout": "Timeout for registration capture",
          "captureTime": "Time of capture request in ISO format",
          "transactionId": "Transaction Id for the current capture",
          "bio": [
            {
              "type": "Type of the biometric data",
              "count": "Finger/Iris count, in case of face max is set to 1",
              "bioSubType": [
                "Array of subtypes"
              ],
              "exception": [
                "Finger or Iris to be excluded"
              ],
              "requestedScore": "Expected quality score that should match to complete a successful capture.",
              "serialNo": "Printed Serial Number of the device",
              "deviceSubId": "Specific device Id",
              "previousHash": "Hash of the previous block"
            }
          ]
        },
        "examples": [
          {
            "specVersion": "0.95",
            "data": {
              "captureDevice": {
                "serialNo": "string",
                "make": "string",
                "model": "string",
                "type": "Finger",
                "deviceSubType": "string",
                "deviceProvider": "string",
                "deviceProviderId": "string",
                "dateTime": "string"
              },
              "deviceServiceVersion": "string",
              "bioType": "Face",
              "bioSubType": "Left IndexFinger",
              "purpose": "Auth",
              "env": "string",
              "domainUri": "http://enrollment.govstack.global",
              "bioValue": "string",
              "requestedScore": 0,
              "transactionId": "ABC123456789",
              "timestamp": "2016-07-16T19:20:30+5:30",
              "qualityScore": 0
            },
            "hash": "string",
            "sessionKey": "string",
            "thumbprint": "string"
          }
        ],
        "properties": {
          "specVersion": {
            "type": "string",
            "minLength": 1,
            "enum": [
              "0.95",
              "1.0"
            ]
          },
          "data": {
            "type": "object",
            "description": "The entire data in this object is encrypted as a single blob and attached here as a string - Refer the SBI Specification",
            "properties": {
              "captureDevice": {
                "$ref": "#/components/schemas/CaptureDevice"
              },
              "deviceServiceVersion": {
                "type": "string",
                "minLength": 1,
                "description": "version of SBI (secure biometric interface) spec driver "
              },
              "bioType": {
                "type": "string",
                "minLength": 1,
                "enum": [
                  "Face",
                  "Finger",
                  "Iris",
                  "Voice",
                  "Palm"
                ],
                "description": ""
              },
              "bioSubType": {
                "type": "string",
                "minLength": 1,
                "enum": [
                  "Left IndexFinger",
                  "Left MiddleFinger",
                  "Left RingFinger",
                  "Left LittleFinger",
                  "Left Thumb",
                  "Right IndexFinger",
                  "Right MiddleFinger",
                  "Right RingFinger",
                  "Right LittleFinger",
                  "Right Thumb",
                  "UNKNOWN",
                  "Left",
                  "Right"
                ]
              },
              "purpose": {
                "type": "string",
                "minLength": 1,
                "enum": [
                  "Auth",
                  "KYC",
                  "Registration"
                ],
                "maxLength": 144,
                "description": "simple string to explain the purpose of the auth. This will be notified to the user"
              },
              "env": {
                "type": "string",
                "minLength": 1
              },
              "domainUri": {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              "bioValue": {
                "type": "string",
                "minLength": 1
              },
              "requestedScore": {
                "type": "number",
                "minimum": 0,
                "maximum": 100
              },
              "transactionId": {
                "type": "string",
                "minLength": 12,
                "maxLength": 50,
                "example": "ABC123456789"
              },
              "timestamp": {
                "type": "string",
                "minLength": 20,
                "example": "2016-07-16T19:20:30+5:30"
              },
              "qualityScore": {
                "type": "number",
                "minimum": 0,
                "maximum": 100
              },
              "mimetype": {
                "type": "string",
                "description": "Mimetype limited to audio, video, image as per https://www.iana.org/assignments/media-types/media-types.xhtml#audio, https://www.iana.org/assignments/media-types/media-types.xhtml#video, https://www.iana.org/assignments/media-types/media-types.xhtml#image\nin cases of ISO send iso-19794",
                "minLength": 0,
                "maxLength": 256
              }
            },
            "required": [
              "captureDevice",
              "bioType",
              "bioSubType",
              "bioValue",
              "transactionId",
              "timestamp",
              "mimetype"
            ]
          },
          "hash": {
            "type": "string",
            "minLength": 1
          },
          "sessionKey": {
            "type": "string",
            "minLength": 1
          },
          "thumbprint": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "specVersion",
          "hash",
          "sessionKey",
          "thumbprint"
        ]
      },
      "CaptureDevice": {
        "description": "Digital footprint of the capture device",
        "type": "object",
        "x-examples": {
          "example-1": {
            "serialNo": "Serial number",
            "make": "Make of the device",
            "model": "Model of the device",
            "type": "Type of the biometric device",
            "deviceSubType": "Subtypes of the biometric device",
            "deviceProvider": "Device provider name",
            "deviceProviderId": "Device provider id",
            "dateTime": "Current datetime in ISO format"
          }
        },
        "properties": {
          "serialNo": {
            "type": "string",
            "description": "Serial no of the device, same as whats printed on the device. In case of integrated pls ensure the it can be seen in about device or similar such features. Alpha numeric",
            "minLength": 0,
            "maxLength": 12
          },
          "make": {
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "description": "Make of the device"
          },
          "model": {
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "description": "Model of the device"
          },
          "type": {
            "type": "string",
            "minLength": 1,
            "enum": [
              "Finger",
              "Iris",
              "Face"
            ],
            "maxLength": 50,
            "description": "Type of the device"
          },
          "deviceSubType": {
            "type": "string",
            "minLength": 1,
            "enum": [
              "Slap",
              "Single",
              "Touchless",
              "Double",
              "Full Frontal"
            ],
            "maxLength": 50,
            "description": "Additional mode details of device type. Its a enum"
          },
          "deviceProvider": {
            "type": "string",
            "minLength": 1,
            "description": "Provider name as per the certification",
            "maxLength": 256
          },
          "deviceProviderId": {
            "type": "string",
            "minLength": 1,
            "description": "Unique provider id assigned by the certifier",
            "maxLength": 50
          },
          "dateTime": {
            "type": "string",
            "minLength": 1,
            "description": "ISO Timestamp of the device ",
            "format": "date-time"
          }
        },
        "required": [
          "serialNo",
          "make",
          "model",
          "type",
          "dateTime"
        ]
      },
      "Consent": {
        "title": "Consent",
        "type": "object",
        "description": "",
        "properties": {
          "type": {
            "type": "string",
            "minLength": 1,
            "enum": [
              "embedded",
              "linked",
              "no-consent"
            ],
            "example": "linked",
            "maxLength": 50,
            "description": "Consent type. Limited the enum values"
          },
          "data": {
            "type": "string",
            "minLength": 1,
            "description": "embedded data in jwt format",
            "maxLength": 256
          },
          "schema": {
            "type": "string",
            "format": "uri-reference",
            "minLength": 1,
            "maxLength": 256,
            "description": "Schema for the consent"
          },
          "signUri": {
            "type": "string",
            "minLength": 1,
            "format": "uri",
            "description": "signature url. no data of the consent",
            "maxLength": 256
          },
          "linkUri": {
            "type": "string",
            "minLength": 1,
            "format": "uri",
            "description": "unique link to the content of the consent",
            "maxLength": 256
          }
        },
        "required": [
          "type"
        ]
      },
      "DemoAttribute": {
        "title": "Demo",
        "type": "object",
        "properties": {
          "atributeName": {
            "type": "string",
            "description": "Name of the attribute. eg name, firstname",
            "minLength": 1,
            "maxLength": 50
          },
          "value": {
            "type": "string",
            "description": "Value for the demographic data",
            "minLength": 1,
            "maxLength": 2096
          },
          "language": {
            "type": "string",
            "description": "Language of the value ISO 639-1 in case the language is not available in 639-1 use 639-2",
            "minLength": 2,
            "maxLength": 3
          }
        },
        "required": [
          "attributeName",
          "value"
        ]
      },
      "Document": {
        "title": "Document",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3,
            "maxLength": 256
          },
          "purpose": {
            "type": "string",
            "enum": [
              "poi",
              "poa",
              "poe",
              "others",
              "por",
              "poc",
              "pop"
            ],
            "description": "Whats the purpose of the document attached. eg: poi - proof of identity,address, exception, residence, consent, payment\n"
          },
          "type": {
            "type": "string",
            "minLength": 0,
            "maxLength": 255,
            "description": "Type of the document. Mostly used in case same issuer issues multiple documents. "
          },
          "identifier": {
            "type": "string",
            "description": "Id number of the document",
            "minLength": 3,
            "maxLength": 255
          },
          "dateofIssue": {
            "type": "string",
            "description": "When the document was issued"
          },
          "issuer": {
            "type": "string",
            "description": "Issuing authority, Passport office, Bank ",
            "minLength": 3,
            "maxLength": 25
          },
          "parts": {
            "type": "array",
            "description": "defined parts of the document",
            "items": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "description": "Scanned document or any such data as defined by the mimetype"
                },
                "uri": {
                  "type": "string",
                  "description": "uri of the data ",
                  "maxLength": 256,
                  "minLength": 10
                },
                "mime": {
                  "type": "string",
                  "description": "mime type as per audio, video, image \nhttps://www.iana.org/assignments/media-types/media-types.xhtml#audio\nhttps://www.iana.org/assignments/media-types/media-types.xhtml#video\nhttps://www.iana.org/assignments/media-types/media-types.xhtml#image",
                  "minLength": 2,
                  "maxLength": 256
                },
                "captureDate": {
                  "type": "string",
                  "description": "captured date time as per ISO"
                },
                "captureDevice": {
                  "type": "string",
                  "description": "device that was used for the capture of this part",
                  "minLength": 2,
                  "maxLength": 256
                },
                "name": {
                  "type": "string",
                  "description": "name of the part eg: front page of passport",
                  "minLength": 3,
                  "maxLength": 256
                },
                "pageList": {
                  "type": "array",
                  "description": "List of page numbers ",
                  "minItems": 1,
                  "maxItems": 10,
                  "items": {
                    "type": "integer",
                    "maximum": 10000,
                    "minimum": 0
                  }
                }
              },
              "required": [
                "data",
                "mime",
                "captureDate",
                "name",
                "pageList"
              ]
            }
          }
        },
        "required": [
          "name",
          "purpose",
          "type",
          "identifier",
          "dateofIssue",
          "issuer"
        ]
      },
      "EnrollmentContext": {
        "title": "EnrollmentContext",
        "type": "object",
        "properties": {
          "source": {
            "type": "string"
          },
          "process": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "priority": {
            "type": "string"
          }
        },
        "required": [
          "source",
          "process",
          "date"
        ]
      },
      "Error": {
        "title": "Error",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Error code",
            "minLength": 1,
            "maxLength": 10
          },
          "message": {
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "description": "Message in human readable form"
          },
          "language": {
            "type": "string",
            "minLength": 2,
            "maxLength": 3,
            "description": "ISO 639-1 should be used. in case the language is not available use 639-2"
          },
          "action": {
            "type": "string",
            "minLength": 1,
            "maxLength": 256,
            "description": "Action that the user or operator is expected to take to correct this error."
          }
        }
      },
      "MetaData": {
        "title": "MetaData",
        "type": "object",
        "properties": {
          "attributeName": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      }
    }
  }
}